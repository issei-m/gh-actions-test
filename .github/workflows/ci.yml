name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, ready_for_review, synchronize]

env:
  APP_CONTAINER_IMAGE_TAG_PREFIX: gh-actions-test-
  APP_CONTAINER_IMAGE_CACHE_DIR: ~/cache
  APP_CONTAINER_IMAGE_CACHE_PATH: ~/cache/app-container-image.tar

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Check docker version
        run: docker info
      -
        name: Check app container image cache
        id: app-container-image-cache
        uses: actions/cache@v3
        with:
          key: 'app-container-image-cache'
          path: ${{ env.APP_CONTAINER_IMAGE_CACHE_DIR }}
      - name: Load app container image cache
        if: steps.app-container-image-cache.outputs.cache-hit == 'true'
        run: docker load -i ${APP_CONTAINER_IMAGE_CACHE_PATH}
      -
        name: Build Docker image
        run: |
          docker build
            --cache-from ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest
            -t ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest
            -t ${APP_CONTAINER_IMAGE_TAG_PREFIX}app2:latest
            --build-arg BUILDKIT_INLINE_CACHE=1
            .
      - name: Store app container image cache
        run: |
          docker save
            -o ${APP_CONTAINER_IMAGE_CACHE_PATH}
            ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest
            ${APP_CONTAINER_IMAGE_TAG_PREFIX}app2:latest
      -
        name: Test 1
        run: |
          docker compose run --rm --no-deps app rails -T
      -
        name: Test 2
        run: |
          docker compose run --rm --no-deps app2 rails -T
