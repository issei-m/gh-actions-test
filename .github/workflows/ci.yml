name: CI

on:
  workflow_dispatch: ~
  push:
    branches:
      - main
  pull_request:
    types: [opened, ready_for_review, synchronize]

jobs:
  ci-job:
    runs-on: ubuntu-latest
    env:
      APP_CONTAINER_IMAGE_TAG_PREFIX: gh-actions-test-
      IMAGES_CACHE_DIR: ~/cache
      IMAGES_CACHE_PATH: ~/cache/container-images.tar
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Check docker version
        run: docker info
      -
        name: Check container images cache
        id: container-images-cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          path: ${{ env.IMAGES_CACHE_DIR }}
      -
        name: Check
        if: steps.container-images-cache.outputs.cache-hit == 'true'
        run: |
          ls -la ${IMAGES_CACHE_DIR}
      - name: Load container image cache
        if: steps.container-images-cache.outputs.cache-hit == 'true'
        run: docker load -i ${IMAGES_CACHE_PATH}
      -
        name: Build container images
        run: |
          docker build \
            --cache-from ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest \
            -t ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest \
            -t ${APP_CONTAINER_IMAGE_TAG_PREFIX}app2:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            .
      -
        name: Test 1
        run: |
          docker compose run --rm --no-deps app rails -T
      -
        name: Test 2
        run: |
          docker compose run --rm --no-deps app2 rails -T

      - name: Store container images cache
        run: |
          mkdir -p ${IMAGES_CACHE_DIR}
          docker save \
            -o ${IMAGES_CACHE_PATH} \
            ${APP_CONTAINER_IMAGE_TAG_PREFIX}app:latest \
            ${APP_CONTAINER_IMAGE_TAG_PREFIX}app2:latest
      -
        name: Check
        run: |
          ls -la ${IMAGES_CACHE_DIR}
